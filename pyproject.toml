[tool.poetry]
name = "nova-rerun-bridge"
version = "0.27.2"
description = "Visualizes the state of your nova instance inside of [rerun.io](https://rerun.io). This is intended to be used alongside the [nova python lib](https://github.com/wandelbotsgmbh/wandelbots-nova)."
authors = [
    "Wandelbots GmbH",
    "Stefan Wagner <stefan.wagner@wandelbots.com>",
    "André Kühnert <andre.kuhnert@wandelbots.com>"
]
readme = "README.md"

packages = [
    { include = "nova_rerun_bridge" }
]

[tool.poetry.scripts]
download-models = "nova_rerun_bridge.helper_scripts.download_models:update_robot_models"

[tool.poetry.dependencies]
python = "^3.10"
rerun-sdk = "^0.21.0"
wandelbots-nova = ">=0.16"
python-decouple = "^3.8"
requests = "^2.32.3"
APScheduler = "^3.11.0"
scipy = "^1.14.1"
trimesh = "^4.5.3"

[tool.poetry.group.dev.dependencies]
ruff = "^0.9.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
assets = []
build_command = "pip install poetry && poetry build"
build_command_env = []
commit_message = "{version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
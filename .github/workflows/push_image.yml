name: Docker Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  REGISTRY: wandelbots.azurecr.io
  IMAGE_NAME: nova-apps/rerun

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get version from pyproject.toml
        id: version
        run: |
          version=$(grep '^version = ' pyproject.toml | cut -d'"' -f2)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Login to Azure Container Registry
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.PUBLIC_REGISTRY_CI_SCOPE_NOVA_APPS_USERNAME }}
          password: ${{ secrets.PUBLIC_REGISTRY_CI_SCOPE_NOVA_APPS_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.ref == 'refs/heads/main' }}
          load: ${{ github.ref != 'refs/heads/main' }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify Image
        if: github.ref != 'refs/heads/main'
        run: |
          echo "Checking built image..."
          echo "Version: ${{ steps.version.outputs.version }}"
          docker images | grep ${{ env.IMAGE_NAME }}
